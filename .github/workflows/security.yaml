name: Security Checks

on:
  push:
    branches:
      - main
      - security-pipeline
  pull_request:
    branches:
      - main
      - security-pipeline
  schedule:
    - cron: '0 0 * * 0'  # Weekly on Sundays

jobs:
  security-checks:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write  # Required for CodeQL

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Initialize CodeQL
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      # Step 3: Set up Node.js for ESLint
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      # Step 4: Install dependencies + ESLint plugins
      - name: Install dependencies
        run: |
          npm install
          npm install --save-dev eslint eslint-plugin-security eslint-plugin-node

      # Step 5: Run ESLint
      - name: Run ESLint
        run: |
          npx eslint . --ext .js,.jsx,.ts,.tsx --format json -o eslint-results.json || true

      # Step 6: Upload ESLint Report
      - name: Upload ESLint Report
        uses: actions/upload-artifact@v4
        with:
          name: eslint-results
          path: eslint-results.json

      # Step 7: CodeQL Analysis
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          output: results/javascript.sarif

      # Step 8: Upload CodeQL Results
      - name: Upload CodeQL SARIF Results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results/javascript.sarif
          category: custom-codeql-analysis

      # Step 9: Install Trivy and Trivy-to-HTML
      - name: Install Trivy and HTML converter
        run: |
          sudo apt-get update
          sudo apt-get install wget curl -y
          
          # Install Trivy
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy -y
          
          # Install trivy-to-html
          curl -Lo trivy-to-html https://github.com/gitleaks/trivy-to-html/releases/latest/download/trivy-to-html-linux-amd64
          chmod +x trivy-to-html
          sudo mv trivy-to-html /usr/local/bin/

      # Step 10: Run Trivy and generate reports
      - name: Run Trivy Scan and Generate HTML Report
        run: |
          mkdir -p trivy-reports
          trivy fs . --scanners vuln --vuln-type library --format json --output trivy-reports/trivy-results.json || true
          trivy fs . --scanners vuln --vuln-type library --format table --output trivy-reports/trivy-report.txt || true

          # Generate HTML report
          trivy-to-html -i trivy-reports/trivy-results.json -o trivy-reports/trivy-report.html

      # Step 11: Upload Trivy Reports
      - name: Upload Trivy Reports (HTML, JSON, TXT)
        uses: actions/upload-artifact@v4
        with:
          name: trivy-reports
          path: trivy-reports
