name: Security Checks

on:
  push:
    branches: 
      - main
      - security-pipeline
  pull_request:
    branches:
      - main
      - security-pipeline 
  schedule:
    - cron: '0 0 * * 0'  # Weekly on Sundays   

jobs: 
  security-checks:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write  # Required for CodeQL

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 1: Initialize CodeQL (language: JavaScript)
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      # Step 2: Set up Node.js for ESLint
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      # Step 3: Install dependencies + ESLint plugins
      - name: Install dependencies
        run: |
          npm install
          npm install --save-dev eslint eslint-plugin-security eslint-plugin-node

      # Step 4: Run ESLint and output JSON report
      - name: Run ESLint
        run: |
          npx eslint . --ext .js,.jsx,.ts,.tsx --format json -o eslint-results.json || true

      # Step 5: Upload ESLint report as artifact
      - name: Upload ESLint Report
        uses: actions/upload-artifact@v4
        with:
          name: eslint-results
          path: eslint-results.json

      # Step 6: Perform CodeQL Analysis
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      # Step 7: Upload CodeQL SARIF Results manually
      - name: Upload CodeQL SARIF Results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results/javascript.sarif
